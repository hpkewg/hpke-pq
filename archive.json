{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-07-15T01:00:41.582717+00:00",
  "repo": "hpkewg/hpke-pq",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "ref-impl",
      "description": "Issues related to the reference implementation, not the spec",
      "color": "2b4eb4"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOOXfHTc62JNEo",
      "title": "Choosing between PQ or PQ/T",
      "url": "https://github.com/hpkewg/hpke-pq/issues/2",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> guidance on when to use ML-KEM directly versus using it within HPKE would be helpful for protocols that are currently using HPKE\n\nI don't know if we'd resolved on whether there would be a Recommended column in the registry, which is one potentially way of resolving this concern.  Absent that, some discussion of the considerations might be worthwhile.",
      "createdAt": "2025-05-12T07:03:31Z",
      "updatedAt": "2025-06-30T12:13:50Z",
      "closedAt": "2025-06-30T12:13:50Z",
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson - FWIW, I would note that the text you have quoted does not say \"PQ vs PQ/T\", it says \"ML-KEM vs. HPKE\", which is honestly kind of nonsensical because they do different things.\n\nI don't think it's the business of this group to opine on when to use PQ vs. PQ/T.  There is not a \"Recommended\" column in the registries right now, and I don't think there should be.  (Slim if any evidence for efficacy in guiding good choices.)  In any case, that would be an issue for -hpke, not this doc.",
          "createdAt": "2025-05-13T12:11:23Z",
          "updatedAt": "2025-05-13T12:11:23Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed 2025-06-06: Sense of the room was to avoid the controversy.  Will confirm on-list.",
          "createdAt": "2025-06-06T16:51:19Z",
          "updatedAt": "2025-06-06T16:51:19Z"
        },
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Guidance from Deb is that we should have a small comment in the Security Considerations with a high-level note about the differences between pure and hybrid.",
          "createdAt": "2025-06-06T16:53:09Z",
          "updatedAt": "2025-06-06T16:53:09Z"
        },
        {
          "author": "schanzen",
          "authorAssociation": "NONE",
          "body": "I can put my comment from the chat then on the record here as well: I think that the best course of action in order to stay out of the controversy is to only include PQ/T for now. There is really no significant downside to the PQ/T apart from a minor performance hit (and by minor I think negligible tbh). But the PQ-only has security risk attached to it. Putting it into the draft as an \"equal\" option is putting Internet users at risk atm, because implementors will implement it and provide it. (Understanding the nuanced discussions around PQ-only and PQ/T is difficult to convey even withing the crypto community so I think the task of providing meaningful \"guidance\" is borderline futile). See also my comment https://github.com/hpkewg/hpke/issues/17 which IMO would be another option where no choice needs to be made and both put in. Then, by having suitable categories such as a recommended column, notice how in the hypothetical year 2035 when ML-KEM is broken and no QC is here it will look a lot less bad if the recommended colum sais \"discouraged\" or something.",
          "createdAt": "2025-06-06T17:10:40Z",
          "updatedAt": "2025-06-06T17:13:47Z"
        },
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #8 ",
          "createdAt": "2025-06-30T12:13:50Z",
          "updatedAt": "2025-06-30T12:13:50Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOOXfHTc66pIli",
      "title": "Finalize PQ/T hybrids",
      "url": "https://github.com/hpkewg/hpke-pq/issues/9",
      "state": "OPEN",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The general framework for referencing PQ/T hybrid KEMs was set up in #5.  Those documents are still stabilizing, so we will need to update this document as they firm up.",
      "createdAt": "2025-06-09T20:03:22Z",
      "updatedAt": "2025-07-10T12:25:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rohanmahy",
          "authorAssociation": "NONE",
          "body": "Should we use XWing or KitchenSink or QSF for ML-KEM768 + X25519?\n",
          "createdAt": "2025-07-07T20:08:44Z",
          "updatedAt": "2025-07-07T20:59:44Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The draft presently says QSF (which means XWing).  That matches the feedback that we received on the list.\n\nMy understanding is that the reason this issue remains open is to serve as a reminder that any updates to the CFRG drafts need to be properly caught and reflected in the draft.",
          "createdAt": "2025-07-08T04:28:50Z",
          "updatedAt": "2025-07-08T04:28:50Z"
        },
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson is on the right track here. \n\n* QSF(X25519 + ML-KEM-768) is intended to be identical to X-Wing\n* We should use the \"QSF\" terminology",
          "createdAt": "2025-07-10T12:25:00Z",
          "updatedAt": "2025-07-10T12:25:00Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOOXfHTc66p0G5",
      "title": "Add test vectors for some combinations",
      "url": "https://github.com/hpkewg/hpke-pq/issues/11",
      "state": "CLOSED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC 9180 has test vectors for a few combinations of KDF/KEM/AEAD.  It might be nice for this document to include test vectors for combinations including the KEMs and KDFs defined here, at least the combos that are [likely to be adopted by MLS](https://www.ietf.org/archive/id/draft-mahy-mls-pq-00.html):\n\n* Hybrid(X25519 + ML-KEM-768) + SHAKE128 + AES-128-GCM\n* Hybrid(P256 + ML-KEM-768) + SHAKE128 + AES-128-GCM\n* Hybrid(P384 + ML-KEM-1024) + SHAKE256 + AES-256-GCM\n* ML-KEM-768 + SHAKE128 + AES-128-GCM\n* ML-KEM-1024 + SHAKE256 + AES-256-GCM\n\n(This is presuming that MLS will use the SHA3 version, as opposed to the SHA2 things that are in the draft now.  TBD)",
      "createdAt": "2025-06-09T21:22:37Z",
      "updatedAt": "2025-06-30T22:21:04Z",
      "closedAt": "2025-06-30T22:21:04Z",
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOOXfHTc674VQe",
      "title": "Your Organization Here",
      "url": "https://github.com/hpkewg/hpke-pq/issues/14",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Maybe this is who Richard works for.  Maybe not.",
      "createdAt": "2025-06-17T05:12:18Z",
      "updatedAt": "2025-06-30T11:45:50Z",
      "closedAt": "2025-06-30T11:45:50Z",
      "comments": []
    },
    {
      "number": 16,
      "id": "I_kwDOOXfHTc674bBy",
      "title": "TODO: Binding Properties",
      "url": "https://github.com/hpkewg/hpke-pq/issues/16",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is still a TODO in the draft.",
      "createdAt": "2025-06-17T05:10:29Z",
      "updatedAt": "2025-06-30T12:13:23Z",
      "closedAt": "2025-06-30T12:13:22Z",
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #8 ",
          "createdAt": "2025-06-30T12:13:23Z",
          "updatedAt": "2025-06-30T12:13:23Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOOXfHTc674bza",
      "title": "Acknowledge (or not)",
      "url": "https://github.com/hpkewg/hpke-pq/issues/17",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This might be one where acknowledgments aren't necessary.",
      "createdAt": "2025-06-17T05:40:19Z",
      "updatedAt": "2025-06-30T11:45:31Z",
      "closedAt": "2025-06-30T11:45:31Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOOXfHTc6_MrzW",
      "title": "Ref-impl some KDF IDs seem incorrect",
      "url": "https://github.com/hpkewg/hpke-pq/issues/23",
      "state": "OPEN",
      "author": "ilaril",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "ref-impl"
      ],
      "body": "The reference implementation seems to have some KDF identifiers set incorrectly:\n\n* SHAKE256 seems to have ID 0x10, should presumably be 0x11.\n  - Line 225 of reference-implementation/src/kdf.rs\n* TurboSHAKE128 seems to have ID 0x10, should presumably be 0x12.\n  - Line 242 of reference-implementation/src/kdf.rs\n* TurboSHAKE256 seems to have ID 0x10, should presumably be 0x13.\n  - Line 261 of reference-implementation/src/kdf.rs\n\n(Took me a while to find this while trying to debug why the KDF part of test vectors do not verify against my own HPKE implementation.)\n",
      "createdAt": "2025-07-07T06:55:15Z",
      "updatedAt": "2025-07-10T22:53:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch @ilaril.  Posted a fix in #28.  Maybe you could verify that the updated test vectors work with your implementation?",
          "createdAt": "2025-07-10T22:53:02Z",
          "updatedAt": "2025-07-10T22:53:02Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOOXfHTc6_Vpth",
      "title": "Should the KDFs include XOF() in them?",
      "url": "https://github.com/hpkewg/hpke-pq/issues/24",
      "state": "OPEN",
      "author": "rohanmahy",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "For example, should the KDF for SHAKE256 be called XOF(SHAKE256) or is SHAKE256 sufficiently unambiguous?",
      "createdAt": "2025-07-07T20:07:50Z",
      "updatedAt": "2025-07-10T12:48:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "The QSF algorithm names are taken from [draft-irtf-cfrg-concrete-hybrid-kems](https://datatracker.ietf.org/doc/draft-irtf-cfrg-concrete-hybrid-kems/).  This issue should be [over there](https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/issues).\n\nPreviewing what I'll say there, though:\n* The issue title doesn't make sense.  XOFs aren't being used KDFs here, but instead for seed expansion.\n* XOF(SHAKE256) is redundant.  SHAKE is an XOF.\n* Not sure what your point is about SHA-256.  There is no SHA-2 in this document.",
          "createdAt": "2025-07-10T12:38:41Z",
          "updatedAt": "2025-07-10T12:38:41Z"
        },
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Reopening because I misread the issue.\n\nBut like I said, XOF(SHAKE256) is redundant. SHAKE is an XOF.",
          "createdAt": "2025-07-10T12:48:21Z",
          "updatedAt": "2025-07-10T12:48:21Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOOXfHTc6_bF1S",
      "title": "Add hybrid KEM: X448 + ML-KEM-1024",
      "url": "https://github.com/hpkewg/hpke-pq/issues/25",
      "state": "OPEN",
      "author": "jiep",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi!\n\nCompared to the current proposal of P-384 + ML-KEM-1024, X448 provides stronger security margins for elliptic curve cryptography, better resistance to side-channel attacks, and improved performance in certain implementations, making it a more robust choice for post-quantum hybrid encryption. \n\nFurthermore, it accelerates the migration to post-quantum cryptography by introducing a secure and streamlined path for current DHKEM(X448, HKDF-SHA512) implementations.\n\nRegards.",
      "createdAt": "2025-07-08T08:25:30Z",
      "updatedAt": "2025-07-10T12:33:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @jiep - Could you please raise this on the [hpke working group mailing list](https://datatracker.ietf.org/group/hpke/email/)?  My impression so far has been that there is not demand for an X448 combination.",
          "createdAt": "2025-07-10T12:33:06Z",
          "updatedAt": "2025-07-10T12:33:06Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOOXfHTc6_cQ_h",
      "title": "Missing dependency `concrete-hybrid-kem`",
      "url": "https://github.com/hpkewg/hpke-pq/issues/26",
      "state": "OPEN",
      "author": "jiep",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "ref-impl"
      ],
      "body": "Steps to reproduce:\n\n1. Clone this repository.\n2. Run `cargo build`. The output shows that `concrete-hybrid-kem` has not been found:\n\n```\nerror: failed to get `concrete-hybrid-kem` as a dependency of package `hpke-ref v0.1.0 (/workspaces/hpke-pq/reference-implementation)`\n\nCaused by:\n  failed to load source for dependency `concrete-hybrid-kem`\n\nCaused by:\n  Unable to update /workspaces/draft-irtf-cfrg-concrete-hybrid-kems/reference-implementation\n\nCaused by:\n  failed to read `/workspaces/draft-irtf-cfrg-concrete-hybrid-kems/reference-implementation/Cargo.toml`\n\nCaused by:\n  No such file or directory (os error 2)\n```\n\nWhere can I find the dependency `concrete-hybrid-kem`?\n\nThanks in advance. \n\nBest regards.\n",
      "createdAt": "2025-07-08T09:58:30Z",
      "updatedAt": "2025-07-10T12:34:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @jiep -- The `concrete-hybrid-kems` crate is here: https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/pull/8.  You'll need to clone that repo/branch yourself and adjust the `path` field in Cargo.toml.\n\nIf you have time to file a PR improving the documentation, that would be helpful!",
          "createdAt": "2025-07-10T12:30:51Z",
          "updatedAt": "2025-07-10T12:30:51Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOOXfHTc7AHJrg",
      "title": "Use deterministic encapsulation for the test vectors",
      "url": "https://github.com/hpkewg/hpke-pq/issues/29",
      "state": "OPEN",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The CFRG concrete KEMs draft defines an optional [EncapsDerand](https://www.ietf.org/archive/id/draft-irtf-cfrg-hybrid-kems-04.html#appendix-A) algorithm that performs deterministic encapsulation.  This is implemented by the hybrid KEMs defined there, and thus by the concrete hybrid KEMs used by this document.\n\nUsing EncapsDerand for the test vectors could help implementations verify that their `Setup<Mode>S` implementations are correct as well as their `Setup<Mode>R` implementations.  It would be consistent with the inclusion of `skE` / `pkE` values in the RFC 9180 test vectors.",
      "createdAt": "2025-07-11T14:18:37Z",
      "updatedAt": "2025-07-11T14:18:37Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOOXfHTc6UMAGv",
      "title": "Add support for single-stage KDFs",
      "url": "https://github.com/hpkewg/hpke-pq/pull/1",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Corresponds to https://github.com/hpkewg/hpke/pull/16\r\n\r\nNot sure we need all six of these?",
      "createdAt": "2025-04-28T15:20:15Z",
      "updatedAt": "2025-06-09T19:57:19Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "6009aeb36e2f2dbc6bf94b3823ec86d3eab0261a",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "xof",
      "headRefOid": "290ff88b096a5093631e83c7695b8e71d1560ed9",
      "closedAt": "2025-06-09T19:57:19Z",
      "mergedAt": "2025-06-09T19:57:19Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "ecdfcffbb9c25641718867bd21189e788c49f931"
      },
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess it makes sense to keep both SHAKE and TurboSHAKE in case FIPS-y people don't like TurboSHAKE?",
          "createdAt": "2025-04-28T15:29:16Z",
          "updatedAt": "2025-04-28T15:29:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6m4Gko",
          "commit": {
            "abbreviatedOid": "3e1c3e1"
          },
          "author": "bwesterb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-28T15:23:33Z",
          "updatedAt": "2025-04-28T15:23:33Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "KT only makes sense for inputs longer than 24kB. Does HPKE ever pass such long inputs to the KDF?",
              "createdAt": "2025-04-28T15:23:33Z",
              "updatedAt": "2025-04-28T15:23:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6m4KCs",
          "commit": {
            "abbreviatedOid": "3e1c3e1"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-28T15:26:56Z",
          "updatedAt": "2025-04-28T15:26:56Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "In principle, it's possible via the `info` parameter going into `KeySchedule`.  But it seems quite unlikely, and even then, there's a hard max of 64k, at least according to the current content of https://github.com/hpkewg/hpke/pull/16.  Given that, I would probably drop KT.",
              "createdAt": "2025-04-28T15:26:56Z",
              "updatedAt": "2025-04-28T15:26:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6tLX5V",
          "commit": {
            "abbreviatedOid": "88bd665"
          },
          "author": "dconnolly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d",
          "createdAt": "2025-06-06T16:33:16Z",
          "updatedAt": "2025-06-06T16:33:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOOXfHTc6WYJ4s",
      "title": "typos and clarifications",
      "url": "https://github.com/hpkewg/hpke-pq/pull/3",
      "state": "MERGED",
      "author": "cfm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Just a couple of things spotted while reading through the draft.  :-)",
      "createdAt": "2025-05-15T19:04:54Z",
      "updatedAt": "2025-05-16T15:18:22Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "67f37b867da15d0b47523a1c4e05fb063063502a",
      "headRepository": "cfm/hpke-pq",
      "headRefName": "patch-1",
      "headRefOid": "8b761450863d5a43dcda5c8bfa8bcc93f3e92e56",
      "closedAt": "2025-05-16T15:18:22Z",
      "mergedAt": "2025-05-16T15:18:22Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "125d207fb3d135f8a7dddef5a791db19101c81c2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6pj1nz",
          "commit": {
            "abbreviatedOid": "8b76145"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-05-15T19:11:37Z",
          "updatedAt": "2025-05-15T19:11:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOOXfHTc6Ygpap",
      "title": "Reflect WG adoption",
      "url": "https://github.com/hpkewg/hpke-pq/pull/4",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also fix a minor MD error.",
      "createdAt": "2025-06-01T22:09:30Z",
      "updatedAt": "2025-06-01T23:04:26Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "125d207fb3d135f8a7dddef5a791db19101c81c2",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "adopt",
      "headRefOid": "f4ea6bb358a4c5bb64275ed1e00357aa59d23647",
      "closedAt": "2025-06-01T23:04:26Z",
      "mergedAt": "2025-06-01T23:04:26Z",
      "mergedBy": "yaroslavros",
      "mergeCommit": {
        "oid": "f71bf8edf5843c5d6c42bdc3ce474e38576a9d38"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDOOXfHTc6ZBO90",
      "title": "Define HPKE KEMs using PQ/T hybrid KEMs",
      "url": "https://github.com/hpkewg/hpke-pq/pull/5",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CFRG has two drafts in progress for hybrid KEMs:\r\n\r\n* [draft-irtf-cfrg-hybrid-kems](https://cfrg.github.io/draft-irtf-cfrg-hybrid-kems/draft-irtf-cfrg-hybrid-kems.html) defines general schemes for constructing PQ/T hybrid KEMs from a T group/KEM and a PQ KEM.\r\n* [draft-irtf-cfrg-concrete-hybrid-kems](https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/blob/main/draft-irtf-cfrg-concrete-hybrid-kems.md) defines a few specific instantiations of the general schemes.\r\n\r\n(Note that I am referring to the GitHub / editor's copies of these docs for now, since the authors of those docs haven't yet released new drafts reflecting the required changes.  Should be soon.)\r\n\r\nThis PR just maps the KEM interface from those documents to the HPKE one, and registers KEM IDs for the hybrid KEMs.\r\n\r\nAlso, as a bit of terminology cleanup, we use \"IND-CCA2\" to talk about public-key encryption, and \"IND-CCA\" to talk about KEMs, since this seems to be the standard terminology.",
      "createdAt": "2025-06-04T12:52:18Z",
      "updatedAt": "2025-06-09T20:09:45Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "ecdfcffbb9c25641718867bd21189e788c49f931",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "pqt",
      "headRefOid": "1f4a62d83364e7f8f78dce7d4a45c08407c43b55",
      "closedAt": "2025-06-09T20:09:32Z",
      "mergedAt": "2025-06-09T20:09:32Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "5d800e03849fba379a30bed9b1b13efa38f013b9"
      },
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Also: KEM names are likely to change as the bikeshed gets painted, so regard these names as pretty provisional.",
          "createdAt": "2025-06-04T14:44:28Z",
          "updatedAt": "2025-06-04T14:44:28Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Action to take a question about the use of SHA-2 in these KEMs.  Just to confirm that there isn't anyone who is stuck on CNSA 2.0 and so needs a combination with those.",
          "createdAt": "2025-06-06T16:40:43Z",
          "updatedAt": "2025-06-06T16:40:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6sxWpl",
          "commit": {
            "abbreviatedOid": "b880a58"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-05T01:24:08Z",
          "updatedAt": "2025-06-05T01:24:09Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Would this be better?\r\n\r\n```suggestion\r\nHNN3:\r\n: P-256 + ML-KEM-768\r\n\r\nHNN5:\r\n: P-384 + ML-KEM-1024\r\n\r\nHNX:\r\n: X25519 + ML-KEM-768\r\n{: spacing=\"compact\"}\r\n```",
              "createdAt": "2025-06-05T01:24:09Z",
              "updatedAt": "2025-06-05T01:24:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6sxW8c",
          "commit": {
            "abbreviatedOid": "b880a58"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-05T01:25:23Z",
          "updatedAt": "2025-06-05T01:25:28Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "With or without `()` on each of these?  `GenerateKeyPair()` sticks out.",
              "createdAt": "2025-06-05T01:25:23Z",
              "updatedAt": "2025-06-05T01:25:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOOXfHTc6ZJpD6",
      "title": "typo fix",
      "url": "https://github.com/hpkewg/hpke-pq/pull/6",
      "state": "MERGED",
      "author": "loganaden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-05T07:57:04Z",
      "updatedAt": "2025-06-09T19:53:44Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "017ffabee4796fd67d07eaf028ca9b2f0489e707",
      "headRepository": "cyberstormdotmu/hpke-pq",
      "headRefName": "loganaden-hpke_pq_typo",
      "headRefOid": "3282b4a458630dce716b279dc3637d8f37647954",
      "closedAt": "2025-06-09T19:53:44Z",
      "mergedAt": "2025-06-09T19:53:44Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "6009aeb36e2f2dbc6bf94b3823ec86d3eab0261a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6thQKx",
          "commit": {
            "abbreviatedOid": "3282b4a"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-09T19:52:59Z",
          "updatedAt": "2025-06-09T19:52:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOOXfHTc6ZbK82",
      "title": "Mention ML-KEM-512 in the intro",
      "url": "https://github.com/hpkewg/hpke-pq/pull/7",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-06T17:18:15Z",
      "updatedAt": "2025-06-09T20:05:02Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "017ffabee4796fd67d07eaf028ca9b2f0489e707",
      "headRepository": "dconnolly/hpke-pq",
      "headRefName": "patch-1",
      "headRefOid": "3d64a8cf135b75b46d212f5b8c25167e0bc55d55",
      "closedAt": "2025-06-09T20:05:02Z",
      "mergedAt": "2025-06-09T20:05:02Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "4e6555f60aa1eafd81e43e5831cadfbeabe24863"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6thYGy",
          "commit": {
            "abbreviatedOid": "3d64a8c"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-09T20:04:37Z",
          "updatedAt": "2025-06-09T20:04:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOOXfHTc6ZbdQK",
      "title": "Add security considerations about PQ/T hybrid vs. pure PQ",
      "url": "https://github.com/hpkewg/hpke-pq/pull/8",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed in #17 and at the 2025-06-06 interim, this PR makes a couple of caveats:\r\n\r\n* ML-KEM-512 is noted to be \"not suitable for general use on the Internet\"\r\n* The security considerations get a note describing the difference between hybrid and pure PQ",
      "createdAt": "2025-06-06T17:53:58Z",
      "updatedAt": "2025-06-30T12:12:53Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "5d800e03849fba379a30bed9b1b13efa38f013b9",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "sec-cons",
      "headRefOid": "ae3e9b40840381a6dbc77342d1f6242b396c80de",
      "closedAt": "2025-06-30T12:12:53Z",
      "mergedAt": "2025-06-30T12:12:53Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "4d5fbb207287ad23f028620c4f3a71fb999285fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6ta063",
          "commit": {
            "abbreviatedOid": "9b5df61"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-09T09:27:54Z",
          "updatedAt": "2025-06-09T09:27:55Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nsecurity properties.\r\n```",
              "createdAt": "2025-06-09T09:27:54Z",
              "updatedAt": "2025-06-09T09:27:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6ta1p9",
          "commit": {
            "abbreviatedOid": "9b5df61"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-09T09:28:37Z",
          "updatedAt": "2025-06-09T09:28:38Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n{:aside}\r\n> Note: While this document defines an HPKE KEM for ML-KEM-512 in the interest\r\n```\r\n\r\nNot taking any position on Quynh's feedback on the list.",
              "createdAt": "2025-06-09T09:28:38Z",
              "updatedAt": "2025-06-09T09:28:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6toGEi",
          "commit": {
            "abbreviatedOid": "5b3d3d3"
          },
          "author": "bwesterb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-10T10:44:17Z",
          "updatedAt": "2025-06-10T10:44:17Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "It's a bit more subtle than that. At the time of writing there is no peer-reviewed evidence that ML-KEM-512 doesn't reach its claimed security level (AES-128). ML-KEM-768 is a hedge against cryptanalytic improvement.",
              "createdAt": "2025-06-10T10:44:17Z",
              "updatedAt": "2025-06-10T10:44:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6tr1CU",
          "commit": {
            "abbreviatedOid": "24308d1"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "One typo, one suggestion.",
          "createdAt": "2025-06-10T14:52:19Z",
          "updatedAt": "2025-06-10T14:54:23Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n> is not catastrophic, at a modest performance penalty.\r\n```",
              "createdAt": "2025-06-10T14:52:20Z",
              "updatedAt": "2025-06-10T14:54:23Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nquantum attacker.  In environments where there is concern that (an implementation of) ML-KEM might not\r\n```\r\n\r\nI think it's more fair to ML-KEM to make it more explicit that we're more worried about implementation concerns than to keep casting doubt about the algorithm itself.",
              "createdAt": "2025-06-10T14:54:08Z",
              "updatedAt": "2025-06-10T14:54:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOOXfHTc6ZvkKH",
      "title": "Clean up the pure ML-KEM section",
      "url": "https://github.com/hpkewg/hpke-pq/pull/10",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Inspired by [a PR comment](https://github.com/hpkewg/hpke-pq/pull/5#pullrequestreview-2898620188) from @martinthomson, this PR cleans up the same `()` notation in the pure ML-KEM KEM definitions.\r\n\r\nIt also removes the mention of AuthEncap / AuthDecap, since these have been removed from draft-ietf-hpke-hpke.",
      "createdAt": "2025-06-09T20:16:53Z",
      "updatedAt": "2025-06-09T20:19:29Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "5d800e03849fba379a30bed9b1b13efa38f013b9",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "ml-kem-cleanup",
      "headRefOid": "eeebba4745220fc4cd7054d412737bb90df5313c",
      "closedAt": "2025-06-09T20:19:24Z",
      "mergedAt": "2025-06-09T20:19:24Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "f9038bcd4247137b6ca9f228eb14db07b1d6c398"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "PR_kwDOOXfHTc6aoGmj",
      "title": "Follow your own structure for IANA",
      "url": "https://github.com/hpkewg/hpke-pq/pull/12",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-16T01:32:07Z",
      "updatedAt": "2025-06-30T11:48:13Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "f9038bcd4247137b6ca9f228eb14db07b1d6c398",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "iana-update",
      "headRefOid": "7a293fc44b0170582e1433bc7b860709cda351de",
      "closedAt": "2025-06-30T11:48:13Z",
      "mergedAt": "2025-06-30T11:48:13Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "36ff7cdf8f092cea11c06409e3a4f58f682072f3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xFMmA",
          "commit": {
            "abbreviatedOid": "7a293fc"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-30T11:47:50Z",
          "updatedAt": "2025-06-30T11:47:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOOXfHTc6aoIG3",
      "title": "Rearrange the KDF definitions slightly",
      "url": "https://github.com/hpkewg/hpke-pq/pull/13",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "For readability.\r\n\r\nRemoves the caption for the pseudocode (this uses \"as follows\", so no need to assign a figure number).\r\nReorders slightly.\r\nRemoves \"Reserved\" from the table, which duplicates the hpke-hpke draft.",
      "createdAt": "2025-06-16T01:38:11Z",
      "updatedAt": "2025-06-30T11:46:47Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "f9038bcd4247137b6ca9f228eb14db07b1d6c398",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "split-kdf",
      "headRefOid": "a51384bfd81aea24bd9ac273948e5c8263158411",
      "closedAt": "2025-06-30T11:46:46Z",
      "mergedAt": "2025-06-30T11:46:46Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "4b4cfe1465f8ce0006f01436200229e841f3abc1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xFL5-",
          "commit": {
            "abbreviatedOid": "a51384b"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-30T11:46:41Z",
          "updatedAt": "2025-06-30T11:46:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOOXfHTc6a1EAs",
      "title": "Update author affiliation",
      "url": "https://github.com/hpkewg/hpke-pq/pull/15",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #14.",
      "createdAt": "2025-06-17T05:31:46Z",
      "updatedAt": "2025-06-30T11:45:49Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "f9038bcd4247137b6ca9f228eb14db07b1d6c398",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "barnes-affiliation",
      "headRefOid": "fbe8b0d3b9127ef4bb65aad132288175a58639c9",
      "closedAt": "2025-06-30T11:45:49Z",
      "mergedAt": "2025-06-30T11:45:49Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "4b6d9919d5a0c3d5469acdd323b7fe6563f0be66"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xFLUU",
          "commit": {
            "abbreviatedOid": "fbe8b0d"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-30T11:45:43Z",
          "updatedAt": "2025-06-30T11:45:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOOXfHTc6a1Hag",
      "title": "No acknowledg[e]ments",
      "url": "https://github.com/hpkewg/hpke-pq/pull/18",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The easy option.  Feel free to open a different PR with actual content and close this if that is more appropriate.\r\n\r\nCloses #17.",
      "createdAt": "2025-06-17T05:41:26Z",
      "updatedAt": "2025-06-30T11:45:30Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "f9038bcd4247137b6ca9f228eb14db07b1d6c398",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "noack",
      "headRefOid": "998de33b43b5477f0818c0c870fded2e96e8c5d5",
      "closedAt": "2025-06-30T11:45:30Z",
      "mergedAt": "2025-06-30T11:45:30Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "6ef6e3144e760e598ccd8a6ecb85816bb21f0135"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xFLIV",
          "commit": {
            "abbreviatedOid": "998de33"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-30T11:45:25Z",
          "updatedAt": "2025-06-30T11:45:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOOXfHTc6csBU_",
      "title": "Add a reference implementation and test vectors",
      "url": "https://github.com/hpkewg/hpke-pq/pull/19",
      "state": "MERGED",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR adds a reference implementation that leverages the corresponding reference implementations for [hybrid KEMs](https://github.com/cfrg/draft-irtf-cfrg-hybrid-kems/pull/33) and [concrete hybrid KEMs](https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/pull/8), then uses it to add test vectors.\r\n\r\nIt also updates the names of the hybrid constructions to match the current names in the [concrete hybrid KEMs repo](https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/blob/main/draft-irtf-cfrg-concrete-hybrid-kems.md#concrete-hybrid-kem-instances), and assigns values to the KDF registrations.\r\n\r\nFixes #11 ",
      "createdAt": "2025-06-30T12:32:44Z",
      "updatedAt": "2025-06-30T22:21:03Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "4d5fbb207287ad23f028620c4f3a71fb999285fb",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "ref-impl",
      "headRefOid": "70ce766a6045c5f6a00a2113af7ecb1a1fb07fbd",
      "closedAt": "2025-06-30T22:21:02Z",
      "mergedAt": "2025-06-30T22:21:02Z",
      "mergedBy": "bifurcation",
      "mergeCommit": {
        "oid": "e93b03f0e767a7e6b5686c188f5883cadae74136"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "PR_kwDOOXfHTc6cyGoo",
      "title": "Fix some references",
      "url": "https://github.com/hpkewg/hpke-pq/pull/20",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "draft-barnes-hpke-hpke is easy.\r\n\r\nThe \\[CONCRETE] reference isn't so obvious.  I think that the intent was to reference the hybrid-kems draft, from context.",
      "createdAt": "2025-06-30T23:05:36Z",
      "updatedAt": "2025-07-10T23:12:17Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "e93b03f0e767a7e6b5686c188f5883cadae74136",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "barnes",
      "headRefOid": "c20e0412624ff677bdee2dc11d74e5a4da2f07c0",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson - For some reason, the build is broken here.  Not obvious to me why.  Thoughts?",
          "createdAt": "2025-07-10T23:02:34Z",
          "updatedAt": "2025-07-10T23:02:34Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My bad.  I missed a PQC for engineers reference",
          "createdAt": "2025-07-10T23:08:47Z",
          "updatedAt": "2025-07-10T23:08:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xYWpm",
          "commit": {
            "abbreviatedOid": "dc1489b"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-07-01T15:26:07Z",
          "updatedAt": "2025-07-01T15:27:18Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "This is wrong.  The KEM interface is defined in the generic doc, i.e., draft-irtf-cfrg-hybrid-kems.  Suggest making two references GENERIC and CONCRETE, which can both point to draft-irtf-cfrg-hybrid-kems for now, and then CONCRETE will get moved over once that is published.",
              "createdAt": "2025-07-01T15:26:07Z",
              "updatedAt": "2025-07-01T15:27:18Z"
            },
            {
              "originalPosition": 16,
              "body": "If we're going to have a nickname, let's put it above, not inline.",
              "createdAt": "2025-07-01T15:26:25Z",
              "updatedAt": "2025-07-01T15:27:18Z"
            },
            {
              "originalPosition": 37,
              "body": "Redefinition of the nickname.",
              "createdAt": "2025-07-01T15:26:33Z",
              "updatedAt": "2025-07-01T15:27:18Z"
            },
            {
              "originalPosition": 66,
              "body": "This should be GENERIC.",
              "createdAt": "2025-07-01T15:26:58Z",
              "updatedAt": "2025-07-01T15:27:18Z"
            },
            {
              "originalPosition": 56,
              "body": "This should be GENERIC.",
              "createdAt": "2025-07-01T15:27:02Z",
              "updatedAt": "2025-07-01T15:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6xdCNS",
          "commit": {
            "abbreviatedOid": "dc1489b"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-01T22:51:02Z",
          "updatedAt": "2025-07-01T22:51:02Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Redefinition is fine, but - for you - I'll fix it.",
              "createdAt": "2025-07-01T22:51:02Z",
              "updatedAt": "2025-07-01T22:51:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6zRedS",
          "commit": {
            "abbreviatedOid": "c20e041"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-10T23:12:17Z",
          "updatedAt": "2025-07-10T23:12:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOOXfHTc6c59pe",
      "title": "Auth modes of RFC9180 and limitations of KEMs",
      "url": "https://github.com/hpkewg/hpke-pq/pull/21",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Security considerations seemed to make sense, but this section could also go into the introduction.\r\n\r\nI did not get too technical (\"DH is a NIKE, KEMs are not NIKE\"), but if we want that is an option.\r\n\r\nIf there's a better way to link to a paragraph in another draft, that'd be a great improvement over my hard-coded section number.",
      "createdAt": "2025-07-01T13:14:52Z",
      "updatedAt": "2025-07-11T07:21:03Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "e93b03f0e767a7e6b5686c188f5883cadae74136",
      "headRepository": "thomwiggers/hpke-pq",
      "headRefName": "no-auth-mode",
      "headRefOid": "7e2ca630f12f55ad71d2a3c5f2f725f34a2131aa",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6xYfE-",
          "commit": {
            "abbreviatedOid": "b891850"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "FWIW, the [text that was removed](https://github.com/hpkewg/hpke-pq/pull/10/files#diff-19fbaf93b7b41ba746f54a68220cf10d39decc31ebad0a21e8acb4b07263013bL185) was smaller and inline with the KEM definition:\r\n\r\n> The `AuthEncap()` and `AuthDecap()` functions are not implemented.\r\n\r\nBut I can see the appeal of having this in the Security Considerations.  If we did the inline approach, we would at least have to repeat it for the hybrid KEMs.\r\n\r\n",
          "createdAt": "2025-07-01T15:37:37Z",
          "updatedAt": "2025-07-01T15:38:30Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nPSK-authenticated HPKE ({{Section 5.1.2 of HPKE}})\r\nor digital signatures may be suitable alternatives.\r\n```\r\n\r\n(Note: `{{HPKE}}` will break the build until #20 lands.)",
              "createdAt": "2025-07-01T15:37:37Z",
              "updatedAt": "2025-07-01T15:38:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6xdCjQ",
          "commit": {
            "abbreviatedOid": "b891850"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-01T22:52:19Z",
          "updatedAt": "2025-07-01T22:52:19Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\ncannot be used to migrate uses of HPKE that rely on this mode.\r\n```",
              "createdAt": "2025-07-01T22:52:19Z",
              "updatedAt": "2025-07-01T22:52:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6xkT1A",
          "commit": {
            "abbreviatedOid": "b891850"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T13:03:26Z",
          "updatedAt": "2025-07-02T13:03:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I take it that there's no secret way to use the `#mode-psk` (or whatever it is) anchor? ",
              "createdAt": "2025-07-02T13:03:26Z",
              "updatedAt": "2025-07-02T13:03:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6xrBaM",
          "commit": {
            "abbreviatedOid": "b891850"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T22:47:29Z",
          "updatedAt": "2025-07-02T22:47:30Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "That doesn't exist, sadly.  I've considering doing that work, but it's not a simple thing to do.  So, obviously, this will rot.",
              "createdAt": "2025-07-02T22:47:30Z",
              "updatedAt": "2025-07-02T22:47:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6xvzIp",
          "commit": {
            "abbreviatedOid": "b891850"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T07:42:01Z",
          "updatedAt": "2025-07-03T07:42:01Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Yeah, I figured as much. I guess that's why our registration fees are funding the RFC editors.",
              "createdAt": "2025-07-03T07:42:01Z",
              "updatedAt": "2025-07-03T07:42:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6zQ-OQ",
          "commit": {
            "abbreviatedOid": "567e152"
          },
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-10T22:18:30Z",
          "updatedAt": "2025-07-10T22:18:31Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nPSK-authenticated HPKE ({{Section 5.1.2 of I-D.barnes-hpke-hpke}})\r\n```",
              "createdAt": "2025-07-10T22:18:30Z",
              "updatedAt": "2025-07-10T22:18:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6zRV5u",
          "commit": {
            "abbreviatedOid": "7e2ca63"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-10T22:54:20Z",
          "updatedAt": "2025-07-10T22:54:20Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nPSK-authenticated HPKE ({{Section 5.1.2 of I-D.ietf-hpke-hpke}})\r\n```\r\n\r\nOr are you looking to reference the draft explicitly?",
              "createdAt": "2025-07-10T22:54:20Z",
              "updatedAt": "2025-07-10T22:54:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXfHTc6zWUvU",
          "commit": {
            "abbreviatedOid": "7e2ca63"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-11T07:21:02Z",
          "updatedAt": "2025-07-11T07:21:03Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@bifurcation committed this change so I'm not sure why this got changed to the draft version.",
              "createdAt": "2025-07-11T07:21:02Z",
              "updatedAt": "2025-07-11T07:21:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOOXfHTc6dYoX7",
      "title": "Wrap the test vectors",
      "url": "https://github.com/hpkewg/hpke-pq/pull/22",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This makes them harder to process; and maybe this would be better in the original script, but one step at a time.",
      "createdAt": "2025-07-04T07:03:35Z",
      "updatedAt": "2025-07-10T22:59:17Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "e93b03f0e767a7e6b5686c188f5883cadae74136",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "rapping",
      "headRefOid": "4f556fe8b49607a7f467755c2978b70b0391a802",
      "closedAt": "2025-07-10T22:59:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in favor of fixing the problem upstream in #28 ",
          "createdAt": "2025-07-10T22:59:14Z",
          "updatedAt": "2025-07-10T22:59:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 27,
      "id": "PR_kwDOOXfHTc6eYyZS",
      "title": "Re-use the existing X-Wing code point",
      "url": "https://github.com/hpkewg/hpke-pq/pull/27",
      "state": "OPEN",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/hpke/r4_lx0mtSy6wZjT62ldxYUzqQcU/",
      "createdAt": "2025-07-10T22:15:08Z",
      "updatedAt": "2025-07-11T20:49:28Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "e93b03f0e767a7e6b5686c188f5883cadae74136",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "xwing-iana",
      "headRefOid": "d34af5d13a87c13afb163ba81f7af19c23b6d85f",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Actually, this is interesting, which one 'wins'? They are interoperable and identical but (this is a purely procedural / IANA question)\r\n\r\nI ask because people are using X-Wing as defined in the other document using this codepoint, it shouldn't matter for interop I'm mostly curious, I wonder if that results in confusion",
          "createdAt": "2025-07-10T22:19:06Z",
          "updatedAt": "2025-07-10T22:19:06Z"
        },
        {
          "author": "davidben",
          "authorAssociation": "NONE",
          "body": "Is it any different from what would happen had draft-connolly-cfrg-xwing-kem-06 been adopted by hpkewg and then eventually morphed into this document, while staying compatible? We'd presumably update the reference to the final RFC in that case.\r\n\r\nI guess the name of the construction has changed. Although with ridiculous names like `DHKEM(P-256, HKDF-SHA256)` and `QSF-X25519-MLKEM768-SHAKE256-SHA3256`, I doubt people were using them as-is anyway. (Why do we keep doing this to ourselves?)",
          "createdAt": "2025-07-10T22:29:22Z",
          "updatedAt": "2025-07-10T22:30:01Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Is it any different from what would happen had draft-connolly-cfrg-xwing-kem-06 been adopted by hpkewg and then eventually morphed into this document, while staying compatible? We'd presumably update the reference to the final RFC in that case.\r\n> \r\n> I guess it's the name of the construction has changed. Although with ridiculous names like `DHKEM(P-256, HKDF-SHA256)` and `QSF-X25519-MLKEM768-SHAKE256-SHA3256`, I doubt people were using them as-is anyway.\r\n\r\nGood point, ok",
          "createdAt": "2025-07-10T22:30:02Z",
          "updatedAt": "2025-07-10T22:30:02Z"
        },
        {
          "author": "davidben",
          "authorAssociation": "NONE",
          "body": "> ridiculous names\r\n\r\n2 cents: I know HPKE's convention is to write in every parameter, but I might suggest names like \"P256-MLKEM768\", \"P384-MLKEM1024\", and \"X25519-MLKEM768\" would have been slightly more practical, and more likely to end up with implementations aligning on names. It's okay if some parameters aren't represented. One hopes we're not going to define another version of these. If we do, it can always add a short suffix like \"X25519-MLKEM768-v2\" or \"X25519-MLKEM768-SHA4\" or something.\r\n\r\nAfter all, it's ML-KEM-768, not ML-KEM-768-SHAKE256-SHA3256-SHAKE256-SHA3512-SHAKE128. :-)",
          "createdAt": "2025-07-10T22:36:16Z",
          "updatedAt": "2025-07-10T22:36:16Z"
        },
        {
          "author": "bifurcation",
          "authorAssociation": "COLLABORATOR",
          "body": "@davidben - I agree with you, but @dconnolly pushed for more stuff.  And in any case, that's an issue for https://github.com/cfrg/draft-irtf-cfrg-concrete-hybrid-kems/",
          "createdAt": "2025-07-10T23:05:08Z",
          "updatedAt": "2025-07-10T23:05:08Z"
        },
        {
          "author": "rohanmahy",
          "authorAssociation": "NONE",
          "body": "> > ridiculous names\r\n> \r\n> 2 cents: I know HPKE's convention is to write in every parameter, but I might suggest names like \"P256-MLKEM768\", \"P384-MLKEM1024\", and \"X25519-MLKEM768\" would have been slightly more practical, and more likely to end up with implementations aligning on names. It's okay if some parameters aren't represented. One hopes we're not going to define another version of these. If we do, it can always add a short suffix like \"X25519-MLKEM768-v2\" or \"X25519-MLKEM768-SHA4\" or something.\r\n> \r\n> After all, it's ML-KEM-768, not ML-KEM-768-SHAKE256-SHA3256-SHAKE256-SHA3512-SHAKE128. :-)\r\n\r\nI used:\r\n\r\n`QSF-KEM(ML-KEM-768,X25519)` for the KEM name inside the MLS ciphersuite names in draft-mahy-mls-pq. The resulting MLS cipher suite names are already quite long. For example:\r\n\r\n`MLS_128_QSF-KEM(ML-KEM-768,X25519)_AES256GCM_SHA384_Ed25519`\r\n\r\nI realize that parentheses and commas have not been used to date in KEM names, but I couldn't find anything preventing use of these characters. I think the parentheses make it very clear that QSF is combining those two things.\r\n\r\nAs suggested above, we could use QSF-KEM(ML-KEM-768,X25519)v2 of -2 if we need to change one of the support algorithms inside.\r\n",
          "createdAt": "2025-07-11T08:59:54Z",
          "updatedAt": "2025-07-11T08:59:54Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "Commas and parens might be problematic when you start to configure these things as a list. Emphasis on *might*\r\n\r\nPerhaps we can look to other IETF specs for short names, like JOSE?",
          "createdAt": "2025-07-11T13:02:50Z",
          "updatedAt": "2025-07-11T13:02:50Z"
        },
        {
          "author": "rohanmahy",
          "authorAssociation": "NONE",
          "body": "> Commas and parens might be problematic when you start to configure these things as a list. Emphasis on _might_\r\n\r\nTo speak specifically for MLS, the ciphersuite in the protocol is identified by an integer. The label is for consistent identification. \r\n\r\nAnd certainly if someone wants a list of labels, they should be able to put the ciphersuite labels or HPKE labels in quotes. \r\n\r\n> Perhaps we can look to other IETF specs for short names, like JOSE?\r\n\r\nThe algorithms in JOSE are JSON strings, so as long as they don't have double quotes or backslashes, they should be ok.",
          "createdAt": "2025-07-11T15:02:25Z",
          "updatedAt": "2025-07-11T15:02:25Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "Most TLS stacks (derived from OpenSSL), and therefore many applications, use text strings to configure ciphers. That is what I was thinking of. Not the protocol-level.\n",
          "createdAt": "2025-07-11T15:22:28Z",
          "updatedAt": "2025-07-11T15:22:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6zQ9Z0",
          "commit": {
            "abbreviatedOid": "d34af5d"
          },
          "author": "dconnolly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-10T22:16:14Z",
          "updatedAt": "2025-07-10T22:16:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOXfHTc6zQ-Ac",
          "commit": {
            "abbreviatedOid": "d34af5d"
          },
          "author": "dconnolly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Actually, this is interesting, which one 'wins'? They are interoperable and identical but (this is a purely procedural / IANA question)",
          "createdAt": "2025-07-10T22:17:51Z",
          "updatedAt": "2025-07-10T22:17:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOXfHTc6zho-9",
          "commit": {
            "abbreviatedOid": "d34af5d"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-11T20:49:28Z",
          "updatedAt": "2025-07-11T20:49:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDOOXfHTc6eZBP9",
      "title": "Fix some minor issues with the reference implementation",
      "url": "https://github.com/hpkewg/hpke-pq/pull/28",
      "state": "OPEN",
      "author": "bifurcation",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Replaces #22 \r\nFixes #23 \r\nFixes #26",
      "createdAt": "2025-07-10T22:52:18Z",
      "updatedAt": "2025-07-13T19:31:15Z",
      "baseRepository": "hpkewg/hpke-pq",
      "baseRefName": "main",
      "baseRefOid": "e93b03f0e767a7e6b5686c188f5883cadae74136",
      "headRepository": "hpkewg/hpke-pq",
      "headRefName": "ref-impl-fix",
      "headRefOid": "9f152592378e884c49d5834a560999d9c83d5a45",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ilaril",
          "authorAssociation": "NONE",
          "body": "Testing against my own implementation (with more extensive set of algorithms), I get the following failures:\r\n\r\n* All ML-KEM tests fail due to wrong private key length.\r\n  * If I hack tests to use ikmr as the private key, tests \u2014 including private key / public key consistency check \u2014 pass.\r\n  * skRm in test vectors does not look sane.\r\n* X-Wing test fails due to wrong private key length.\r\n  * Hacking code to use ikmr still gives wrong private key length error \u2014 with different length value.\r\n  * Both ikmr and skRm in test vectors do not look sane.\r\n  * ~~I have not debugged this further to discover exactly where things go wrong.~~\r\n* All (Turbo)Shake256 tests fail with wrong key error.\r\n  * (Turbo)Shake128 looks fine.\r\n  * exporter_secret in test vectors does not look sane.\r\n  * Presumably because these incorrectly set N_H to 32 instead of 64 \u2014 I have not tested if this would fix the failures.\r\n \r\n(The two other hybrids can not be tested because I do not have an implementation of those.)\r\n\r\nEdit:\r\n* The ML-KEM failures seem to come from cfrg/draft-irtf-cfrg-concrete-hybrid-kems ML-KEM code using dk instead of ikm as the private key  \u2014 this would explain why hacking the code to use ikmr worked.\r\n* And the X-Wing failure seems to come from cfrg/draft-irtf-cfrg-hybrid-kems reference-implementation/src/qsf.rs incorrectly setting the seed length \u2014 this would explain why hacking the code to use ikmr would still fail \u2014 and using dk_hybrid instead of seed as the private key.",
          "createdAt": "2025-07-12T13:59:32Z",
          "updatedAt": "2025-07-13T19:31:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXfHTc6zRcO7",
          "commit": {
            "abbreviatedOid": "955aff9"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I had something slightly more sophisticated in mind, but this works.",
          "createdAt": "2025-07-10T23:05:58Z",
          "updatedAt": "2025-07-10T23:05:58Z",
          "comments": []
        }
      ]
    }
  ]
}